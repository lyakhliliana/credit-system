version: '3.8'
services:
  product-engine-api:
    build:
      context: product_engine
      dockerfile: Dockerfile
    env_file:
      - config.env
    volumes:
      - ./common:/product_engine/common
    networks:
      - fintech-network
    ports:
      - "30:30"
    restart: unless-stopped
    depends_on:
      - postgresql
      - pgadmin
  origination-api:
    build:
      context: origination
      dockerfile: Dockerfile
    env_file:
      - config.env
    volumes:
      - ./common:/origination/common
    networks:
      - fintech-network
    ports:
      - "40:40"
    restart: unless-stopped
  scoring-api:
    build:
      context: scoring
      dockerfile: Dockerfile
    env_file:
      - config.env
    volumes:
      - ./common:/scoring/common
    networks:
      - fintech-network
    ports:
      - "50:50"
    restart: unless-stopped
    depends_on:
      - postgresql
      - pgadmin
  gateway-api:
    build:
      context: gateway
      dockerfile: Dockerfile
    env_file:
      - config.env
    volumes:
      - ./common:/gateway/common
    networks:
      - fintech-network
    ports:
      - "60:60"
    restart: unless-stopped
    depends_on:
      - postgresql
      - pgadmin
  postgresql:
    container_name: "fintech-postgresql"
    image: postgres:15.5
    restart: unless-stopped
    env_file:
      - config.env
    ports:
      - "5432:5432"
    networks:
      - fintech-network
    volumes:
      - ./tools/database-dev/configs/create-multiple-db-with-users.sh:/docker-entrypoint-initdb.d/create-multiple-db-with-users.sh:ro
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: "fintech-pgadmin"
    image: dpage/pgadmin4
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    env_file:
      - config.env
    ports:
      - "8080:80"
    networks:
      - fintech-network
    volumes:
      - ./tools/database-dev/configs/servers.json:/pgadmin4/servers.json:ro
      - ./tools/database-dev/configs/pgpass:/pgadmin4/pgpass:ro
  liquibase-product-engine:
    image: liquibase/liquibase:4.19
    networks:
      - fintech-network
    volumes:
      - ./product_engine/migrations:/app
    command: ["--defaultsFile=/app/dev.properties", "update"]
    depends_on:
      - postgresql
      - pgadmin
  liquibase-origination:
    image: liquibase/liquibase:4.19
    networks:
      - fintech-network
    volumes:
      - ./origination/migrations:/app
    command: ["--defaultsFile=/app/dev.properties", "update"]
    depends_on:
      - postgresql
      - pgadmin

networks:
  fintech-network:
    name: "fintech-network"
